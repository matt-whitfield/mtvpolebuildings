---
// Frontmatter: Import Leaflet CSS and JS
const center = [47.45960934695521, -116.24181060705783]; 

interface Props {
  mapRadius?: number; // Radius in miles
}

const { mapRadius = 50 } = Astro.props;
---

<div id="map-container" style="height: 500px; width: 100%; background-color: #f3f4f6; display: flex; align-items: center; justify-content: center;">
  <div id="map-placeholder" style="text-align: center; color: #374151;">
    <div style="font-size: 18px; margin-bottom: 8px;">üìç</div>
    <div>Loading map...</div>
  </div>
</div>

<script is:inline define:vars={{ center, mapRadius }}>
// Load map resources lazily when container becomes visible
document.addEventListener('DOMContentLoaded', () => {
  const mapContainer = document.getElementById('map-container');
  const mapPlaceholder = document.getElementById('map-placeholder');
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        loadMapResources();
        observer.unobserve(entry.target);
      }
    });
  }, { rootMargin: '100px' });
  
  observer.observe(mapContainer);
  
  function loadMapResources() {
    // Load Leaflet CSS
    const cssLink = document.createElement('link');
    cssLink.rel = 'stylesheet';
    cssLink.href = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.css';
    cssLink.integrity = 'sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=';
    cssLink.crossOrigin = '';
    document.head.appendChild(cssLink);
    
    // Load Leaflet JS
    const script = document.createElement('script');
    script.src = 'https://unpkg.com/leaflet@1.9.4/dist/leaflet.js';
    script.integrity = 'sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=';
    script.crossOrigin = '';
    script.onload = initializeMap;
    document.head.appendChild(script);
  }
  
  function initializeMap() {
    // Clear placeholder
    if (mapPlaceholder) {
      mapPlaceholder.remove();
    }
    
    const map = L.map('map-container').setView(center, 8);
    
    // Add OpenStreetMap tiles (with proper attribution)
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      maxZoom: 19,
    }).addTo(map);

    // Add configurable radius circle (1 mile = 1609.34 meters)
    L.circle(center, {
      radius: mapRadius * 1609.34,
      color: '#3388ff',
      fillColor: '#3388ff',
      fillOpacity: 0.2
    }).addTo(map);
    
    // Optional: Add marker at center
    L.marker(center).addTo(map)
      .bindPopup("Our Service Center");
  }
});
</script>