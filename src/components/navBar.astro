---
// Get the current URL path to determine which page is active
const currentPath = Astro.url.pathname;

// Function to check if a link matches the current page
const isActive = (path: string) => {
  // Exact match for homepage
  if (path === "/" && currentPath === "/") return true;
  // For other pages, check if the current path starts with the link path
  // This covers both exact matches and child pages
  return path !== "/" && currentPath.startsWith(path);
};
---

<header class="w-full bg-white shadow-lg fixed top-0 left-0 right-0 z-30">
  <!-- Top row with contact information -->
  <div id="top-contact-bar" class="bg-gray-100 py-3 top-row-contact transition-all duration-300">
    <div class="container mx-auto px-4 flex flex-col md:flex-row justify-end items-center text-sm gap-4">
      <div class="hidden md:flex md:flex-row items-center space-y-2 md:space-y-0 md:space-x-6 mb-2 md:mb-0">
        <a href="tel:208-512-4282" class="nav-link flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-phone-icon lucide-phone"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/></svg>
          208-512-4282
        </a>
        <a href="mailto:mtviewpolebuildings@gmail.com" class="nav-link flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-mail-icon lucide-mail"><rect width="20" height="16" x="2" y="4" rx="2"/><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"/></svg>
          mtviewpolebuildings@gmail.com
        </a>
      </div>
    </div>
  </div>

  <!-- Bottom row with primary navigation -->
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center py-4 w-full">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center">
          <img src="/images/mtvpb-svg-logo.svg" alt="MTV Pole Buildings Logo" class="h-10 w-auto">
        </a>
      </div>
      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button id="mobile-menu-button" class="text-gray-500 hover:text-gray-700 focus:outline-none" aria-label="Toggle menu">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 menu-icon" viewBox="0 0 24 24" stroke="currentColor" fill="none">
            <path class="line line-1" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16"/>
            <path class="line line-2" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 12h16"/>
            <path class="line line-3" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 18h16"/>
          </svg>
        </button>
      </div>
      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        <a href="/" class={`nav-link font-medium ${isActive("/") ? "active" : ""}`}>Home</a>
        <a href="/about" class={`nav-link font-medium ${isActive("/about") ? "active" : ""}`}>About</a>
        <a href="/work" class={`nav-link font-medium ${isActive("/work") ? "active" : ""}`}>Work</a>
        <a href="#quote-form" class="btn-primary">
          Request Quote
        </a>
      </nav>
    </div>
    
    <!-- Mobile Navigation (hidden by default) -->
    <div id="mobile-menu" class="md:hidden hidden absolute left-0 right-0 bg-white shadow-lg z-20 border-t">
      <div class="flex flex-col space-y-5 p-5">
        <a href="/" class={`nav-link font-medium py-2 ${isActive("/") ? "active" : ""}`}>Home</a>
        <a href="/about" class={`nav-link font-medium py-2 ${isActive("/about") ? "active" : ""}`}>About</a>
        <a href="/work" class={`nav-link font-medium py-2 ${isActive("/work") ? "active" : ""}`}>Work</a>
        <div class="border-t pt-5 mt-2">
          <a href="tel:208-512-4282" class="nav-link flex items-center gap-2 py-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-phone-icon lucide-phone"><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/></svg>
            208-512-4282
          </a>
          <a href="mailto:mountainviewpolebuildings@gmail.com" class="nav-link flex items-center gap-2 py-2 mt-3">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-mail-icon lucide-mail"><rect width="20" height="16" x="2" y="4" rx="2"/><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"/></svg>
            mtviewpolebuildings@gmail.com
          </a>
        </div>
        <a href="#quote-form" class="mobile-quote-button text-center">
          Request Quote
        </a>
      </div>
    </div>
  </div>
</header>

<!-- Add a spacer to prevent content from being hidden behind the fixed header -->
<div class="header-spacer"></div>

<script>
  // Toggle mobile menu with animation
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = mobileMenuButton?.querySelector('.menu-icon');
  
  if (mobileMenuButton && mobileMenu && menuIcon) {
    mobileMenuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      menuIcon.classList.toggle('active');
    });
    
    // Close mobile menu when any link is clicked, including "Request Quote"
    const mobileMenuLinks = mobileMenu.querySelectorAll('a');
    mobileMenuLinks.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
        menuIcon.classList.remove('active');
      });
    });
  }
  
  // Calculate and set the header spacer height to match the header
  document.addEventListener('DOMContentLoaded', () => {
    const header = document.querySelector('header');
    const spacer = document.querySelector('.header-spacer');
    const topContactBar = document.getElementById('top-contact-bar');
    
    if (header && spacer) {
      const setSpacerHeight = () => {
        const headerHeight = header.offsetHeight;
        (spacer as HTMLElement).style.height = `${headerHeight}px`;
      };
      
      // Set initial height
      setSpacerHeight();
      
      // Update on window resize
      window.addEventListener('resize', setSpacerHeight);
    }
    
    // Handle scroll to hide/show top contact bar
    let lastScrollTop = 0;
    const scrollThreshold = 50; // Amount of scroll before hiding top bar
    
    window.addEventListener('scroll', () => {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      
      if (topContactBar) {
        // Hide top bar when scrolling down more than threshold
        if (scrollTop > scrollThreshold) {
          topContactBar.classList.add('top-bar-hidden');
          
          // Update spacer height when top bar is hidden
          if (header && spacer) {
            (spacer as HTMLElement).style.height = `${header.offsetHeight}px`;
          }
        } else {
          // Show top bar when near top of page
          topContactBar.classList.remove('top-bar-hidden');
          
          // Update spacer height when top bar is visible
          if (header && spacer) {
            (spacer as HTMLElement).style.height = `${header.offsetHeight}px`;
          }
        }
      }
      
      lastScrollTop = scrollTop;
    });
  });
</script>

<style>
  .mobile-quote-button {
    background-color: #1a5276;
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 0.25rem;
    font-weight: 600;
    display: block;
    text-decoration: none;
    margin-top: 0.5rem;
  }
  
  /* Add animation for sticky header */
  header {
    transition: transform 0.3s ease;
  }
  
  /* When user scrolls down (optional: can be used with JS to hide header) */
  header.header-hidden {
    transform: translateY(-100%);
  }
  
  /* Top bar transition effect */
  .top-row-contact {
    max-height: 50px;
    overflow: hidden;
    transition: max-height 0.3s ease, opacity 0.3s ease, padding 0.3s ease;
  }
  
  .top-bar-hidden {
    max-height: 0;
    padding-top: 0;
    padding-bottom: 0;
    opacity: 0;
  }
</style>